# start_dev.ps1 - –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤ dev —Ä–µ–∂–∏–º–µ
# –ó–∞–ø—É—Å—Ç–∏—Ç–µ: .\start_dev.ps1

Write-Host "Starting News Aggregator in development mode..." -ForegroundColor Green

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
Write-Host "Activating virtual environment..." -ForegroundColor Yellow
& "venv\Scripts\Activate.ps1"

# –ó–∞–ø—É—Å–∫ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
Write-Host "Starting infrastructure services..." -ForegroundColor Yellow
docker-compose up -d postgres rabbitmq redis

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
Write-Host "Waiting for services to start..." -ForegroundColor Yellow
Start-Sleep -Seconds 10

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
Write-Host "Checking services health..." -ForegroundColor Yellow

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL
try {
    $pgTest = docker exec news-postgres pg_isready -U newsuser -d newsdb
    if ($pgTest -match "accepting connections") {
        Write-Host "‚úÖ PostgreSQL is ready" -ForegroundColor Green
    } else {
        Write-Host "‚ùå PostgreSQL is not ready" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå PostgreSQL check failed" -ForegroundColor Red
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ RabbitMQ
try {
    $rmqTest = docker exec news-rabbitmq rabbitmq-diagnostics ping
    if ($rmqTest -match "pong") {
        Write-Host "‚úÖ RabbitMQ is ready" -ForegroundColor Green
    } else {
        Write-Host "‚ùå RabbitMQ is not ready" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå RabbitMQ check failed" -ForegroundColor Red
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis
try {
    $redisTest = docker exec news-redis redis-cli ping
    if ($redisTest -match "PONG") {
        Write-Host "‚úÖ Redis is ready" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Redis is not ready" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå Redis check failed" -ForegroundColor Red
}

Write-Host ""
Write-Host "üöÄ Starting application services..." -ForegroundColor Green
Write-Host ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ PowerShell
function Start-ServiceInNewWindow {
    param(
        [string]$ServiceName,
        [string]$ScriptPath,
        [string]$Title
    )
    
    $scriptBlock = {
        param($scriptPath, $title)
        Set-Location $PWD
        & "venv\Scripts\Activate.ps1"
        Write-Host "Starting $title..." -ForegroundColor Green
        python $scriptPath
    }
    
    Start-Process powershell -ArgumentList "-NoExit", "-Command", "& { $($scriptBlock.ToString()) } -scriptPath '$scriptPath' -title '$title'"
}

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –æ–∫–Ω–∞—Ö
Write-Host "Starting services in separate windows..." -ForegroundColor Yellow

# API —Å–µ—Ä–≤–µ—Ä
Start-ServiceInNewWindow -ServiceName "API" -ScriptPath "scripts\start_api.py" -Title "News Aggregator API"

# Telegram_Parser
Start-ServiceInNewWindow -ServiceName "Telegram_Parser" -ScriptPath "scripts\start_telegram_parser.py" -Title "Telegram_Parser"

# Outbox Relay
Start-ServiceInNewWindow -ServiceName "OutboxRelay" -ScriptPath "scripts\start_outbox_relay.py" -Title "Outbox Relay"

Write-Host ""
Write-Host "‚úÖ All services started!" -ForegroundColor Green
Write-Host ""
Write-Host "Services running:"
Write-Host "  üì° API Server: http://localhost:8000" -ForegroundColor Cyan
Write-Host "  üìä API Docs: http://localhost:8000/docs" -ForegroundColor Cyan
Write-Host "  üê∞ RabbitMQ Management: http://localhost:15672 (admin/admin123)" -ForegroundColor Cyan
Write-Host "  üåê Neo4j Browser: http://localhost:7474 (neo4j/password123)" -ForegroundColor Cyan
Write-Host ""
Write-Host "To stop all services, run: .\stop_dev.ps1" -ForegroundColor Yellow
Write-Host "To view logs, run: .\view_logs.ps1" -ForegroundColor Yellow
