# export_neo4j_dump.ps1
# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏ –¥–∞–º–ø–∞ Neo4j

param(
    [string]$Format = "all",  # all, cypher, json, csv
    [string]$OutputDir = "dumps",
    [switch]$Help
)

if ($Help) {
    Write-Host "–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–º–ø–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Neo4j" -ForegroundColor Green
    Write-Host ""
    Write-Host "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:" -ForegroundColor Yellow
    Write-Host "  .\export_neo4j_dump.ps1 [-Format <format>] [-OutputDir <dir>] [-Help]"
    Write-Host ""
    Write-Host "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:" -ForegroundColor Yellow
    Write-Host "  -Format     –§–æ—Ä–º–∞—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞: all, cypher, json, csv (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: all)"
    Write-Host "  -OutputDir  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–º–ø–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: dumps)"
    Write-Host "  -Help       –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    Write-Host ""
    Write-Host "–ü—Ä–∏–º–µ—Ä—ã:" -ForegroundColor Yellow
    Write-Host "  .\export_neo4j_dump.ps1"
    Write-Host "  .\export_neo4j_dump.ps1 -Format cypher"
    Write-Host "  .\export_neo4j_dump.ps1 -OutputDir C:\backups"
    exit 0
}

Write-Host "üöÄ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–º–ø–∞ Neo4j" -ForegroundColor Green
Write-Host "========================" -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Neo4j –∑–∞–ø—É—â–µ–Ω
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Neo4j..." -ForegroundColor Yellow

try {
    $neo4jStatus = docker ps --filter "name=radar-neo4j" --format "table {{.Status}}" | Select-String "Up"
    if (-not $neo4jStatus) {
        Write-Host "‚ùå Neo4j –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å–∫–∞–µ–º..." -ForegroundColor Red
        docker-compose up -d neo4j
        Start-Sleep -Seconds 10
    } else {
        Write-Host "‚úÖ Neo4j –∑–∞–ø—É—â–µ–Ω" -ForegroundColor Green
    }
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ Neo4j: $_" -ForegroundColor Red
    Write-Host "üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Docker –∑–∞–ø—É—â–µ–Ω" -ForegroundColor Yellow
    exit 1
}

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
Write-Host "üêç –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..." -ForegroundColor Yellow
if (Test-Path "venv\Scripts\Activate.ps1") {
    & "venv\Scripts\Activate.ps1"
    Write-Host "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ" -ForegroundColor Green
} else {
    Write-Host "‚ùå –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ" -ForegroundColor Red
    Write-Host "üí° –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: .\setup.ps1" -ForegroundColor Yellow
    exit 1
}

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –¥–∞–º–ø–æ–≤
if (-not (Test-Path $OutputDir)) {
    New-Item -ItemType Directory -Path $OutputDir -Force | Out-Null
    Write-Host "üìÅ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $OutputDir" -ForegroundColor Green
}

# –ó–∞–ø—É—Å–∫–∞–µ–º —ç–∫—Å–ø–æ—Ä—Ç
Write-Host "üì§ –ó–∞–ø—É—Å–∫ —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–º–ø–∞..." -ForegroundColor Yellow

try {
    $pythonScript = "scripts\export_neo4j_dump.py"
    
    if (Test-Path $pythonScript) {
        python $pythonScript
        $exitCode = $LASTEXITCODE
        
        if ($exitCode -eq 0) {
            Write-Host "‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
            Write-Host "`nüìÅ –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:" -ForegroundColor Yellow
            Get-ChildItem -Path $OutputDir -Recurse | Where-Object { $_.Name -like "*neo4j_dump*" } | ForEach-Object {
                $size = [math]::Round($_.Length / 1MB, 2)
                Write-Host "  $($_.FullName) ($size MB)" -ForegroundColor Cyan
            }
            
            Write-Host "`nüí° –î–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–º–ø–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:" -ForegroundColor Yellow
            Write-Host "   cypher-shell -u neo4j -p password123 \`< dumps\neo4j_dump_*.cypher" -ForegroundColor Cyan
            
        } else {
            Write-Host "‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ (–∫–æ–¥: $exitCode)" -ForegroundColor Red
        }
    } else {
        Write-Host "‚ùå –°–∫—Ä–∏–ø—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: $pythonScript" -ForegroundColor Red
    }
    
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: $_" -ForegroundColor Red
}

Write-Host "`n–ì–æ—Ç–æ–≤–æ!" -ForegroundColor Green
