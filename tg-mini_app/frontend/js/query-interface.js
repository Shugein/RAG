
class QueryInterface {
    constructor() {
        this.selectedTypes = new Set();
        this.selectedSectors = new Set();
        this.isProcessing = false;
        
        this.initializeComponents();
        this.bindEvents();
              // –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
        const queryDescription = document.getElementById('queryDescription');
        if (queryDescription) {
          // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        resultsContent.innerHTML = contentHTML;yText = result.query || result.query?.text || this.queryInput.value || '–≤–∞—à –∑–∞–ø—Ä–æ—Å';
            queryDescription.textContent = `–ü–æ –∑–∞–ø—Ä–æ—Å—É: "${queryText}"`;
        }

        // –†–µ–Ω–¥–µ—Ä–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        this.renderResults(result);

        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ Telegram
        if (this.isInTelegram) {
            this.tg.MainButton.hide();
            this.tg.BackButton.show();
        }
        
        this.hapticFeedback('success');Telegram();
    }

    initializeComponents() {
        // –û—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        this.queryForm = document.getElementById('queryForm');
        this.queryInput = document.getElementById('queryInput');
        this.submitBtn = document.getElementById('submitBtn');
        this.charCount = document.getElementById('charCount');
        this.loadingOverlay = document.getElementById('loadingOverlay');
        this.resultsSection = document.getElementById('resultsSection');
        this.backBtn = document.getElementById('backBtn');
        
        // –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞
        this.queryTypeButtons = document.querySelectorAll('.query-type-btn');
        this.sectorButtons = document.querySelectorAll('.sector-btn');
        this.quickActionButtons = document.querySelectorAll('.quick-action-btn');
        
        console.log('üéØ Query Interface –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    bindEvents() {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã
        if (this.queryForm) {
            this.queryForm.addEventListener('submit', (e) => this.handleSubmit(e));
        }

        // –°—á–µ—Ç—á–∏–∫ —Å–∏–º–≤–æ–ª–æ–≤
        if (this.queryInput) {
            this.queryInput.addEventListener('input', () => this.updateCharCount());
        }

        // –ö–Ω–æ–ø–∫–∏ —Ç–∏–ø–æ–≤ –∑–∞–ø—Ä–æ—Å–æ–≤
        this.queryTypeButtons.forEach(btn => {
            btn.addEventListener('click', () => this.toggleQueryType(btn));
        });

        // –ö–Ω–æ–ø–∫–∏ —Å–µ–∫—Ç–æ—Ä–æ–≤
        this.sectorButtons.forEach(btn => {
            btn.addEventListener('click', () => this.toggleSector(btn));
        });

        // –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
        this.quickActionButtons.forEach(btn => {
            btn.addEventListener('click', () => this.handleQuickAction(btn));
        });

        // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        if (this.backBtn) {
            this.backBtn.addEventListener('click', () => this.showQueryInterface());
        }

        // –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏
        document.addEventListener('keydown', (e) => this.handleKeyDown(e));
    }

    initializeTelegram() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø—É—Å–∫ –≤ Telegram
        if (window.Telegram && window.Telegram.WebApp) {
            this.tg = window.Telegram.WebApp;
            this.isInTelegram = true;
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram WebApp
            this.tg.ready();
            this.tg.expand();
            this.tg.setHeaderColor('#1e40af');
            this.tg.setBackgroundColor('#ffffff');
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            this.updateUserInfo();
            
            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ Telegram
            this.setupTelegramButtons();
            
            console.log('ü§ñ Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', this.tg.initDataUnsafe?.user);
        } else {
            this.isInTelegram = false;
            console.log('üåê –ó–∞–ø—É—Å–∫ –≤ –æ–±—ã—á–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ');
        }
    }

    updateUserInfo() {
        if (this.isInTelegram && this.tg.initDataUnsafe?.user) {
            const user = this.tg.initDataUnsafe.user;
            const userInitial = document.getElementById('userInitial');
            const userName = document.getElementById('userName');
            
            if (userInitial) {
                userInitial.textContent = user.first_name?.charAt(0) || 'U';
            }
            
            if (userName) {
                userName.textContent = user.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
            }
        }
    }

    setupTelegramButtons() {
        if (!this.isInTelegram) return;

        // –ì–ª–∞–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ - –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞
        this.tg.MainButton.text = 'üöÄ –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ RADAR';
        this.tg.MainButton.color = '#1e40af';
        this.tg.MainButton.textColor = '#ffffff';
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–ª–∞–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
        this.tg.MainButton.onClick(() => {
            if (this.submitBtn && !this.isProcessing) {
                this.submitBtn.click();
            }
        });

        // –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
        this.tg.BackButton.onClick(() => {
            this.showQueryInterface();
        });
    }

    updateCharCount() {
        if (this.queryInput && this.charCount) {
            const length = this.queryInput.value.length;
            this.charCount.textContent = `${length}/500`;
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏
            this.updateSubmitButton();
        }
    }

    updateSubmitButton() {
        const hasQuery = this.queryInput && this.queryInput.value.trim().length > 0;
        const isValid = hasQuery && !this.isProcessing;
        
        if (this.submitBtn) {
            this.submitBtn.disabled = !isValid;
            this.submitBtn.classList.toggle('opacity-50', !isValid);
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–∞–≤–Ω—É—é –∫–Ω–æ–ø–∫—É Telegram
        if (this.isInTelegram) {
            if (isValid) {
                this.tg.MainButton.show();
            } else {
                this.tg.MainButton.hide();
            }
        }
    }

    toggleQueryType(button) {
        const type = button.dataset.type;
        
        if (this.selectedTypes.has(type)) {
            this.selectedTypes.delete(type);
            button.classList.remove('active');
        } else {
            this.selectedTypes.add(type);
            button.classList.add('active');
        }

        this.hapticFeedback('light');
        console.log('üìã –í—ã–±—Ä–∞–Ω–Ω—ã–µ —Ç–∏–ø—ã:', Array.from(this.selectedTypes));
    }

    toggleSector(button) {
        const sector = button.dataset.sector;
        
        // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω "–í—Å–µ —Å–µ–∫—Ç–æ—Ä–∞", –æ—á–∏—â–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ
        if (sector === 'all') {
            this.selectedSectors.clear();
            this.sectorButtons.forEach(btn => btn.classList.remove('active'));
            this.selectedSectors.add('all');
            button.classList.add('active');
        } else {
            // –£–±–∏—Ä–∞–µ–º "–í—Å–µ —Å–µ–∫—Ç–æ—Ä–∞" –µ—Å–ª–∏ –≤—ã–±–∏—Ä–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π
            if (this.selectedSectors.has('all')) {
                this.selectedSectors.delete('all');
                this.sectorButtons.forEach(btn => {
                    if (btn.dataset.sector === 'all') {
                        btn.classList.remove('active');
                    }
                });
            }
            
            if (this.selectedSectors.has(sector)) {
                this.selectedSectors.delete(sector);
                button.classList.remove('active');
            } else {
                this.selectedSectors.add(sector);
                button.classList.add('active');
            }
        }

        this.hapticFeedback('light');
        console.log('üè≠ –í—ã–±—Ä–∞–Ω–Ω—ã–µ —Å–µ–∫—Ç–æ—Ä–∞:', Array.from(this.selectedSectors));
    }

    handleQuickAction(button) {
        const query = button.dataset.query;
        
        if (this.queryInput) {
            this.queryInput.value = query;
            this.updateCharCount();
        }

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã
        this.autoFillFilters(query);
        
        this.hapticFeedback('medium');
        this.showTelegramAlert('–ó–∞–ø—Ä–æ—Å –∑–∞–ø–æ–ª–Ω–µ–Ω! –ù–∞–∂–º–∏—Ç–µ "–ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ" –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.');
    }

    autoFillFilters(query) {
        // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–µ –≤—ã–±–æ—Ä—ã
        this.selectedTypes.clear();
        this.selectedSectors.clear();
        this.queryTypeButtons.forEach(btn => btn.classList.remove('active'));
        this.sectorButtons.forEach(btn => btn.classList.remove('active'));

        const queryLower = query.toLowerCase();

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∑–∞–ø—Ä–æ—Å–∞
        if (queryLower.includes('–≥–æ—Ä—è—á–∏–µ') || queryLower.includes('–∞–∫—Ç—É–∞–ª—å–Ω—ã–µ')) {
            this.selectedTypes.add('hot');
            document.querySelector('[data-type="hot"]')?.classList.add('active');
        }
        if (queryLower.includes('–∞–Ω–∞–ª–∏—Ç–∏–∫') || queryLower.includes('–æ–±–∑–æ—Ä')) {
            this.selectedTypes.add('analytics');
            document.querySelector('[data-type="analytics"]')?.classList.add('active');
        }
        if (queryLower.includes('—á–µ—Ä–Ω–æ–≤–∏–∫') || queryLower.includes('draft')) {
            this.selectedTypes.add('draft');
            document.querySelector('[data-type="draft"]')?.classList.add('active');
        }

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–µ–∫—Ç–æ—Ä
        if (queryLower.includes('–±–∞–Ω–∫')) {
            this.selectedSectors.add('banking');
            document.querySelector('[data-sector="banking"]')?.classList.add('active');
        } else if (queryLower.includes('—ç–Ω–µ—Ä–≥–µ—Ç')) {
            this.selectedSectors.add('energy');
            document.querySelector('[data-sector="energy"]')?.classList.add('active');
        } else {
            this.selectedSectors.add('all');
            document.querySelector('[data-sector="all"]')?.classList.add('active');
        }
    }

    async handleSubmit(e) {
        e.preventDefault();
        
        if (this.isProcessing) return;
        
        const query = this.queryInput?.value?.trim();
        if (!query) {
            this.showTelegramAlert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å');
            return;
        }

        this.isProcessing = true;
        this.showLoading();

        try {
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∑–∞–ø—Ä–æ—Å–∞ –∏ —Å–µ–∫—Ç–æ—Ä
            const queryType = this.getSelectedQueryType();
            const sector = this.getSelectedSector();
            
            console.log(`ÔøΩ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤ RADAR: "${query}" (${queryType}, ${sector})`);

            // –í–´–ó–û–í RADAR –§–£–ù–ö–¶–ò–ò —á–µ—Ä–µ–∑ API
            const result = await this.callRADARFunction(query, queryType, sector);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            this.displayResults(result);

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞:', error);
            this.showTelegramAlert(`–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞: ${error.message}`);
        } finally {
            this.isProcessing = false;
            this.hideLoading();
            this.updateSubmitButton();
        }
    }

    async callRADARFunction(queryText, queryType, sector) {
        /**
         * –í–´–ó–û–í RADAR –§–£–ù–ö–¶–ò–ò —á–µ—Ä–µ–∑ API –∑–∞–≥–ª—É—à–∫—É
         * –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º mock –¥–∞–Ω–Ω—ã–µ, –ø–æ—Ç–æ–º –∑–∞–º–µ–Ω–∏–º –Ω–∞ –≤–∞—à—É –ª–æ–∫–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
         */
        
        const response = await fetch('/api/process_query', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json'
            },
            body: JSON.stringify({
                query: queryText,
                type: queryType,
                sector: sector
            })
        });
        
        if (!response.ok) {
            const errorText = await response.text();
            throw new Error(`HTTP ${response.status}: ${errorText}`);
        }
        
        const result = await response.json();
        console.log('üìä –ü–æ–ª—É—á–µ–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç RADAR:', result);
        
        return result;
    }

    getSelectedQueryType() {
        const activeTypeBtn = document.querySelector('.query-type-btn.active');
        return activeTypeBtn ? activeTypeBtn.dataset.type : 'general';
    }

    getSelectedSector() {
        const activeSectorBtn = document.querySelector('.sector-btn.active');
        return activeSectorBtn ? activeSectorBtn.dataset.sector : 'all';
    }

    displayResults(result) {
        console.log('üéØ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:', result);
        
        // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∑–∞–ø—Ä–æ—Å–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª–µ–µ –Ω–∞–¥—ë–∂–Ω—ã–π —Å–µ–ª–µ–∫—Ç–æ—Ä)
        const heroSection = document.querySelector('.relative.overflow-hidden');
        if (heroSection) {
            heroSection.classList.add('hidden');
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        if (this.resultsSection) {
            this.resultsSection.classList.remove('hidden');
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
        const queryDescription = document.getElementById('queryDescription');
        if (queryDescription) {
            const queryText = result.query?.text || result.query || '–≤–∞—à –∑–∞–ø—Ä–æ—Å';
            queryDescription.textContent = `–ü–æ –∑–∞–ø—Ä–æ—Å—É: "${queryText}"`;
        }

        // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        this.renderResults(result);

        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ Telegram
        if (this.isInTelegram) {
            this.tg.MainButton.hide();
            this.tg.BackButton.show();
        }
        
        this.hapticFeedback('success');
    }

    generateMockResults(queryData) {
        const mockNews = [
            {
                id: 1,
                title: "üè¶ –°–±–µ—Ä–±–∞–Ω–∫ –æ–±—ä—è–≤–∏–ª –æ —Ä–µ–∫–æ—Ä–¥–Ω–æ–π –ø—Ä–∏–±—ã–ª–∏ –∑–∞ –∫–≤–∞—Ä—Ç–∞–ª",
                summary: "–ö—Ä—É–ø–Ω–µ–π—à–∏–π –±–∞–Ω–∫ –†–æ—Å—Å–∏–∏ –ø—Ä–µ–≤—ã—Å–∏–ª –æ–∂–∏–¥–∞–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–≤, –ø–æ–∫–∞–∑–∞–≤ —Ä–æ—Å—Ç –ø—Ä–∏–±—ã–ª–∏ –Ω–∞ 15% –≤ –≥–æ–¥–æ–≤–æ–º –≤—ã—Ä–∞–∂–µ–Ω–∏–∏.",
                source: "RBC",
                date: "04.10.2025",
                hotness: 0.95,
                sector: "banking"
            },
            {
                id: 2,
                title: "‚ö° –ì–∞–∑–ø—Ä–æ–º —Ä–∞—Å—à–∏—Ä—è–µ—Ç –ø–æ—Å—Ç–∞–≤–∫–∏ –≤ –ê–∑–∏—é",
                summary: "–≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π –≥–∏–≥–∞–Ω—Ç –ø–æ–¥–ø–∏—Å–∞–ª –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã –Ω–∞ –ø–æ—Å—Ç–∞–≤–∫—É –≥–∞–∑–∞ –æ–±—â–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç—å—é $50 –º–ª—Ä–¥.",
                source: "–í–µ–¥–æ–º–æ—Å—Ç–∏",
                date: "04.10.2025",
                hotness: 0.87,
                sector: "energy"
            },
            {
                id: 3,
                title: "üí∞ –¶–ë –†–§ –ø–æ–≤—ã—Å–∏–ª –∫–ª—é—á–µ–≤—É—é —Å—Ç–∞–≤–∫—É –¥–æ 21%",
                summary: "–¶–µ–Ω—Ç—Ä–æ–±–∞–Ω–∫ –ø—Ä–∏–Ω—è–ª —Ä–µ—à–µ–Ω–∏–µ –æ –ø–æ–≤—ã—à–µ–Ω–∏–∏ —Å—Ç–∞–≤–∫–∏ –Ω–∞ 200 –±.–ø. –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –∏–Ω—Ñ–ª—è—Ü–∏–æ–Ω–Ω—ã–µ —Ä–∏—Å–∫–∏.",
                source: "–ö–æ–º–º–µ—Ä—Å–∞–Ω—Ç",
                date: "04.10.2025",
                hotness: 0.83,
                sector: "banking"
            }
        ];

        // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ —Å–µ–∫—Ç–æ—Ä–∞–º
        let filteredNews = mockNews;
        if (queryData.sectors.length > 0 && !queryData.sectors.includes('all')) {
            filteredNews = mockNews.filter(news => 
                queryData.sectors.includes(news.sector)
            );
        }

        return {
            query: queryData.query,
            totalFound: filteredNews.length,
            news: filteredNews,
            analytics: {
                sectors: queryData.sectors,
                types: queryData.types,
                timeframe: "–ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞"
            }
        };
    }

    showResults(queryData, results) {
        // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∑–∞–ø—Ä–æ—Å–∞
        document.querySelector('#app > div:first-child').classList.add('hidden');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        this.resultsSection.classList.remove('hidden');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
        const queryDescription = document.getElementById('queryDescription');
        if (queryDescription) {
            queryDescription.textContent = `–ü–æ –∑–∞–ø—Ä–æ—Å—É: "${queryData.query}"`;
        }

        // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        this.renderResults(results);

        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ Telegram
        if (this.isInTelegram) {
            this.tg.MainButton.hide();
            this.tg.BackButton.show();
        }
    }

    renderResults(result) {
        console.log('üé® –†–µ–Ω–¥–µ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:', result);
        
        const resultsContent = document.getElementById('resultsContent');
        if (!resultsContent) {
            console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç resultsContent –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }

        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
        let contentHTML = '';
        
        // –ï—Å–ª–∏ —ç—Ç–æ –æ—Ç–≤–µ—Ç –æ—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ RADAR API (–∫–∞–∫ –≤ –≤–∞—à–µ–º –ø—Ä–∏–º–µ—Ä–µ)
        if (result.documents && result.answer) {
            contentHTML = this.generateRealRadarHTML(result);
        }
        // –ï—Å–ª–∏ —ç—Ç–æ mock –¥–∞–Ω–Ω—ã–µ –æ—Ç –Ω–∞—à–µ–≥–æ –±—ç–∫–µ–Ω–¥–∞
        else if (result.query && result.statistics && result.results) {
            const { query, statistics, results } = result;
            
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –∑–∞–ø—Ä–æ—Å–∞
            if (query.type === 'draft') {
                contentHTML = this.generateDraftHTML(results);
            } else if (query.type === 'hot') {
                contentHTML = this.generateHotNewsHTML(results);
            } else if (query.type === 'analytics') {
                contentHTML = this.generateAnalyticsHTML(results);
            } else {
                contentHTML = this.generateSearchHTML(results);
            }
        }
        // Fallback –¥–ª—è –ª—é–±–æ–≥–æ –¥—Ä—É–≥–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞
        else {
            contentHTML = this.generateGenericHTML(result);
        }

        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        resultsContent.innerHTML = contentHTML;
                    </div>
                </div>
            </div>

            ${contentHTML}

            <!-- –î–µ–π—Å—Ç–≤–∏—è -->
            <div class="mt-8 flex flex-col sm:flex-row gap-4">
                <button class="flex-1 bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white font-semibold py-4 px-6 rounded-2xl transition-all duration-300 transform hover:scale-105">
                    ÔøΩ –≠–∫—Å–ø–æ—Ä—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
                </button>
                <button class="flex-1 bg-gradient-to-r from-green-600 to-green-700 hover:from-green-700 hover:to-green-800 text-white font-semibold py-4 px-6 rounded-2xl transition-all duration-300 transform hover:scale-105">
                    üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
                </button>
            </div>
        `;

        resultsContent.innerHTML = html;
    }

    generateDraftHTML(draft) {
        return `
            <div class="bg-white rounded-2xl shadow-lg p-6 mb-6">
                <h3 class="text-2xl font-bold text-gray-900 mb-4">${draft.title}</h3>
                <p class="text-gray-600 mb-6">${draft.summary}</p>
                
                <div class="mb-6">
                    <h4 class="text-lg font-semibold text-gray-800 mb-3">üîë –ö–ª—é—á–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã:</h4>
                    <ul class="space-y-2">
                        ${draft.key_points.map(point => `
                            <li class="flex items-start">
                                <span class="text-blue-500 mr-2">‚Ä¢</span>
                                <span class="text-gray-700">${point}</span>
                            </li>
                        `).join('')}
                    </ul>
                </div>
                
                <div class="mb-6">
                    <h4 class="text-lg font-semibold text-gray-800 mb-4">üî• –í–∞–∂–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏:</h4>
                    <div class="space-y-3">
                        ${draft.hot_news.map(news => `
                            <div class="border border-gray-200 rounded-xl p-4">
                                <h5 class="font-medium text-gray-900 mb-2">${news.title}</h5>
                                <div class="flex items-center text-sm text-gray-500 mb-2">
                                    <span class="mr-4">üì° ${news.source}</span>
                                    <span class="mr-4">‚≠ê ${news.importance.toFixed(2)}</span>
                                    <span>${news.date}</span>
                                </div>
                                <p class="text-gray-600 text-sm">${news.summary}</p>
                            </div>
                        `).join('')}
                    </div>
                </div>
                
                ${draft.corporate_events && draft.corporate_events.length > 0 ? `
                    <div class="mb-6">
                        <h4 class="text-lg font-semibold text-gray-800 mb-4">üè¢ –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è:</h4>
                        <div class="space-y-3">
                            ${draft.corporate_events.map(event => `
                                <div class="border border-gray-200 rounded-xl p-4">
                                    <h5 class="font-medium text-gray-900 mb-1">${event.company}</h5>
                                    <div class="text-sm text-blue-600 mb-2">${event.event_type}</div>
                                    <div class="text-sm text-gray-500 mb-2">${event.date}</div>
                                    <p class="text-gray-600 text-sm">${event.summary}</p>
                                </div>
                            `).join('')}
                        </div>
                    </div>
                ` : ''}
                
                <div>
                    <h4 class="text-lg font-semibold text-gray-800 mb-3">üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</h4>
                    <ul class="space-y-2">
                        ${draft.recommendations.map(rec => `
                            <li class="flex items-start">
                                <span class="text-green-500 mr-2">‚úì</span>
                                <span class="text-gray-700">${rec}</span>
                            </li>
                        `).join('')}
                    </ul>
                </div>
            </div>
        `;
    }

    generateHotNewsHTML(hotNews) {
        return `
            <div class="bg-white rounded-2xl shadow-lg p-6">
                <h3 class="text-2xl font-bold text-gray-900 mb-4">${hotNews.title}</h3>
                <p class="text-gray-600 mb-6">–ù–∞–π–¥–µ–Ω–æ ${hotNews.total_found} –≥–æ—Ä—è—á–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π</p>
                
                <div class="space-y-4">
                    ${hotNews.news.map(news => `
                        <div class="border border-gray-200 rounded-xl p-4 hover:shadow-md transition-shadow">
                            <div class="flex items-start justify-between mb-3">
                                <h4 class="text-lg font-semibold text-gray-900 flex-1">${news.title}</h4>
                                <div class="ml-4 bg-gradient-to-r from-orange-400 to-red-500 text-white px-3 py-1 rounded-full text-sm font-medium">
                                    üî• ${(news.hotness_score * 100).toFixed(0)}%
                                </div>
                            </div>
                            <p class="text-gray-600 mb-3">${news.content}</p>
                            <div class="flex items-center justify-between text-sm">
                                <div class="flex items-center space-x-4">
                                    <span class="text-gray-500">üì° ${news.source}</span>
                                    <span class="text-gray-500">${news.published_dt}</span>
                                </div>
                                <div class="flex space-x-2">
                                    ${news.tags.map(tag => `
                                        <span class="bg-gray-100 text-gray-800 px-2 py-1 rounded text-xs">${tag}</span>
                                    `).join('')}
                                </div>
                            </div>
                        </div>
                    `).join('')}
                </div>
            </div>
        `;
    }

    generateAnalyticsHTML(analytics) {
        return `
            <div class="bg-white rounded-2xl shadow-lg p-6">
                <h3 class="text-2xl font-bold text-gray-900 mb-4">${analytics.title}</h3>
                <p class="text-gray-600 mb-6">${analytics.period}</p>
                
                <div class="grid grid-cols-2 md:grid-cols-4 gap-4 mb-6">
                    <div class="text-center p-4 bg-blue-50 rounded-xl">
                        <div class="text-2xl font-bold text-blue-600">${analytics.metrics.total_news}</div>
                        <div class="text-sm text-gray-600">–í—Å–µ–≥–æ –Ω–æ–≤–æ—Å—Ç–µ–π</div>
                    </div>
                    <div class="text-center p-4 bg-green-50 rounded-xl">
                        <div class="text-2xl font-bold text-green-600">${analytics.metrics.total_sources}</div>
                        <div class="text-sm text-gray-600">–ò—Å—Ç–æ—á–Ω–∏–∫–æ–≤</div>
                    </div>
                    <div class="text-center p-4 bg-purple-50 rounded-xl">
                        <div class="text-2xl font-bold text-purple-600">${analytics.metrics.avg_importance.toFixed(2)}</div>
                        <div class="text-sm text-gray-600">–°—Ä–µ–¥–Ω—è—è –≤–∞–∂–Ω–æ—Å—Ç—å</div>
                    </div>
                    <div class="text-center p-4 bg-orange-50 rounded-xl">
                        <div class="text-2xl font-bold text-orange-600">${analytics.metrics.total_edisclosure}</div>
                        <div class="text-sm text-gray-600">E-disclosure</div>
                    </div>
                </div>
                
                <div class="mb-6">
                    <h4 class="text-lg font-semibold text-gray-800 mb-4">üìä –†–∞–∑–±–∏–≤–∫–∞ –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º:</h4>
                    <div class="space-y-2">
                        ${analytics.sources_breakdown.map(item => `
                            <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                                <span class="font-medium text-gray-900">${item.source}</span>
                                <div class="flex items-center space-x-2">
                                    <span class="text-gray-600">${item.count}</span>
                                    <span class="text-blue-600 font-medium">${item.percentage}%</span>
                                </div>
                            </div>
                        `).join('')}
                    </div>
                </div>
                
                <div>
                    <h4 class="text-lg font-semibold text-gray-800 mb-4">‚≠ê –¢–æ–ø –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ –≤–∞–∂–Ω–æ—Å—Ç–∏:</h4>
                    <div class="space-y-3">
                        ${analytics.top_news.map((news, index) => `
                            <div class="flex items-start space-x-3 p-3 border border-gray-200 rounded-lg">
                                <div class="flex-shrink-0 w-8 h-8 bg-blue-100 text-blue-600 rounded-full flex items-center justify-center text-sm font-bold">
                                    ${index + 1}
                                </div>
                                <div class="flex-1">
                                    <h5 class="font-medium text-gray-900 mb-1">${news.title}</h5>
                                    <div class="text-sm text-gray-500">
                                        ${news.source} ‚Ä¢ ${news.date} ‚Ä¢ –í–∞–∂–Ω–æ—Å—Ç—å: ${news.importance.toFixed(2)}
                                    </div>
                                </div>
                            </div>
                        `).join('')}
                    </div>
                </div>
            </div>
        `;
    }

    generateSearchHTML(searchResults) {
        return `
            <div class="bg-white rounded-2xl shadow-lg p-6">
                <h3 class="text-2xl font-bold text-gray-900 mb-4">${searchResults.title}</h3>
                <p class="text-gray-600 mb-6">–ù–∞–π–¥–µ–Ω–æ ${searchResults.total_found} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤</p>
                
                <div class="space-y-4">
                    ${searchResults.results.map(result => `
                        <div class="border border-gray-200 rounded-xl p-4 hover:shadow-md transition-shadow">
                            <h4 class="text-lg font-semibold text-gray-900 mb-2">${result.title}</h4>
                            <p class="text-gray-600 mb-3">${result.content}</p>
                            <div class="flex items-center justify-between text-sm">
                                <div class="flex items-center space-x-4">
                                    <span class="text-gray-500">üì° ${result.source}</span>
                                    <span class="text-gray-500">${result.published_dt}</span>
                                </div>
                                <div class="flex items-center space-x-2">
                                    <span class="bg-blue-100 text-blue-800 px-2 py-1 rounded text-xs">
                                        –†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: ${result.relevance}
                                    </span>
                                    <span class="bg-green-100 text-green-800 px-2 py-1 rounded text-xs">
                                        –í–∞–∂–Ω–æ—Å—Ç—å: ${result.importance.toFixed(2)}
                                    </span>
                                </div>
                            </div>
                        </div>
                    `).join('')}
                </div>
            </div>
        `;
    }

    showQueryInterface() {
        console.log('üîô –í–æ–∑–≤—Ä–∞—Ç –∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É –∑–∞–ø—Ä–æ—Å–∞');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∑–∞–ø—Ä–æ—Å–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª–µ–µ –Ω–∞–¥—ë–∂–Ω—ã–π —Å–µ–ª–µ–∫—Ç–æ—Ä)
        const heroSection = document.querySelector('.relative.overflow-hidden');
        if (heroSection) {
            heroSection.classList.remove('hidden');
        }
        
        // –°–∫—Ä—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        if (this.resultsSection) {
            this.resultsSection.classList.add('hidden');
        }

        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ Telegram
        if (this.isInTelegram) {
            this.tg.BackButton.hide();
            this.updateSubmitButton();
        }
    }

    showLoading() {
        if (this.loadingOverlay) {
            this.loadingOverlay.classList.remove('hidden');
        }
    }

    hideLoading() {
        if (this.loadingOverlay) {
            this.loadingOverlay.classList.add('hidden');
        }
    }

    handleKeyDown(e) {
        // Ctrl+Enter –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        if (e.ctrlKey && e.key === 'Enter') {
            if (this.submitBtn && !this.isProcessing) {
                this.submitBtn.click();
            }
        }
        
        // Escape –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞
        if (e.key === 'Escape' && !this.resultsSection.classList.contains('hidden')) {
            this.showQueryInterface();
        }
    }

    hapticFeedback(type = 'light') {
        if (this.isInTelegram && this.tg.HapticFeedback) {
            this.tg.HapticFeedback.impactOccurred(type);
        }
    }

    showTelegramAlert(message) {
        if (this.isInTelegram) {
            this.tg.showAlert(message);
        } else {
            alert(message);
        }
    }

    generateRealRadarHTML(result) {
        /**
         * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç HTML –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ RADAR API
         * –§–æ—Ä–º–∞—Ç: { query, answer, documents, metadata }
         */
        const { query, answer, documents, metadata } = result;
        
        return `
            <!-- –û—Ç–≤–µ—Ç RADAR -->
            <div class="bg-gradient-to-r from-green-50 to-emerald-50 rounded-2xl p-6 mb-6">
                <h3 class="text-xl font-bold text-gray-900 mb-4">ü§ñ –û—Ç–≤–µ—Ç RADAR</h3>
                <div class="bg-white rounded-xl p-4 border border-green-200">
                    <p class="text-gray-800 leading-relaxed">${answer}</p>
                </div>
            </div>

            <!-- –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-6">
                <div class="flex items-center justify-between mb-4">
                    <h3 class="text-xl font-bold text-gray-900">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏</h3>
                    <span class="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium">
                        ${(metadata.total_time || 0).toFixed(2)}s
                    </span>
                </div>
                <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                    <div class="text-center">
                        <div class="text-2xl font-bold text-blue-600">${metadata.num_documents || 0}</div>
                        <div class="text-sm text-gray-600">–î–æ–∫—É–º–µ–Ω—Ç–æ–≤</div>
                    </div>
                    <div class="text-center">
                        <div class="text-2xl font-bold text-green-600">${metadata.vectorizer ? '‚úì' : '‚úó'}</div>
                        <div class="text-sm text-gray-600">–í–µ–∫—Ç–æ—Ä–∏–∑–∞—Ç–æ—Ä</div>
                    </div>
                    <div class="text-center">
                        <div class="text-2xl font-bold text-purple-600">${metadata.reranker ? '‚úì' : '‚úó'}</div>
                        <div class="text-sm text-gray-600">Reranker</div>
                    </div>
                    <div class="text-center">
                        <div class="text-2xl font-bold text-orange-600">${metadata.llm_model ? '‚úì' : '‚úó'}</div>
                        <div class="text-sm text-gray-600">LLM</div>
                    </div>
                </div>
            </div>

            <!-- –ù–∞–π–¥–µ–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã -->
            <div class="bg-white rounded-2xl shadow-lg p-6">
                <h3 class="text-2xl font-bold text-gray-900 mb-6">üìÑ –ù–∞–π–¥–µ–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã</h3>
                <div class="space-y-4">
                    ${documents.map((doc, index) => `
                        <div class="border border-gray-200 rounded-xl p-4 hover:shadow-md transition-shadow">
                            <div class="flex items-start justify-between mb-3">
                                <h4 class="text-lg font-semibold text-gray-900 flex-1">${doc.title}</h4>
                                <div class="flex items-center space-x-2 ml-4">
                                    <span class="bg-blue-100 text-blue-800 px-2 py-1 rounded-full text-xs font-medium">
                                        –ü–æ–∑–∏—Ü–∏—è: ${doc.original_position || index + 1}
                                    </span>
                                    <span class="bg-green-100 text-green-800 px-2 py-1 rounded-full text-xs font-medium">
                                        –°–∫–æ—Ä: ${(doc.rerank_score || 0).toFixed(3)}
                                    </span>
                                </div>
                            </div>
                            
                            <p class="text-gray-700 mb-3 leading-relaxed">${doc.text || doc.chunk_text}</p>
                            
                            <div class="flex items-center justify-between text-sm text-gray-500">
                                <div class="flex items-center space-x-4">
                                    <span>üì∞ ${doc.source}</span>
                                    <span>üïí ${new Date(doc.timestamp * 1000).toLocaleDateString('ru-RU')}</span>
                                </div>
                                ${doc.url ? `<a href="${doc.url}" target="_blank" class="text-blue-600 hover:text-blue-800 underline">–û—Ç–∫—Ä—ã—Ç—å</a>` : ''}
                            </div>
                        </div>
                    `).join('')}
                </div>
            </div>

            <!-- –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏ -->
            <div class="bg-gray-50 rounded-2xl p-6 mt-6">
                <h3 class="text-lg font-bold text-gray-900 mb-4">üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏</h3>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
                    <div>
                        <span class="font-medium text-gray-700">–í–µ–∫—Ç–æ—Ä–∏–∑–∞—Ç–æ—Ä:</span>
                        <span class="text-gray-600 ml-2">${metadata.vectorizer || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                    </div>
                    <div>
                        <span class="font-medium text-gray-700">Reranker:</span>
                        <span class="text-gray-600 ml-2">${metadata.reranker || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                    </div>
                    <div>
                        <span class="font-medium text-gray-700">LLM –º–æ–¥–µ–ª—å:</span>
                        <span class="text-gray-600 ml-2">${metadata.llm_model || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}</span>
                    </div>
                    <div>
                        <span class="font-medium text-gray-700">–í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏:</span>
                        <span class="text-gray-600 ml-2">${(metadata.total_time || 0).toFixed(3)}—Å</span>
                    </div>
                </div>
            </div>

            <!-- –î–µ–π—Å—Ç–≤–∏—è -->
            <div class="mt-8 flex flex-col sm:flex-row gap-4">
                <button class="flex-1 bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white font-semibold py-4 px-6 rounded-2xl transition-all duration-300 transform hover:scale-105">
                    üìä –≠–∫—Å–ø–æ—Ä—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
                </button>
                <button class="flex-1 bg-gradient-to-r from-green-600 to-green-700 hover:from-green-700 hover:to-green-800 text-white font-semibold py-4 px-6 rounded-2xl transition-all duration-300 transform hover:scale-105">
                    üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
                </button>
            </div>
        `;
    }

    generateGenericHTML(result) {
        /**
         * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç HTML –¥–ª—è –ª—é–±–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
         */
        return `
            <div class="bg-white rounded-2xl shadow-lg p-6">
                <h3 class="text-2xl font-bold text-gray-900 mb-4">üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–ø—Ä–æ—Å–∞</h3>
                <div class="bg-gray-50 rounded-xl p-4 overflow-auto">
                    <pre class="text-sm text-gray-700">${JSON.stringify(result, null, 2)}</pre>
                </div>
            </div>
        `;
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è RADAR Query Interface...');
    window.queryInterface = new QueryInterface();
});